{"version":3,"file":"static/js/957.7b22641d.chunk.js","mappings":"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","sources":["pages/students/GradeViewer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useApi } from '../../hooks/useApi';\nimport LoadingSpinner from '../../components/LoadingSpinner';\n\ninterface Grade {\n  id: number;\n  studentId: number;\n  studentName: string;\n  subject: string;\n  marks: number;\n  maxMarks: number;\n  grade: string;\n  remarks: string;\n  date: string;\n}\n\ninterface Class {\n  id: number;\n  name: string;\n  sections: Section[];\n}\n\ninterface Section {\n  id: number;\n  name: string;\n  students: Student[];\n}\n\ninterface Student {\n  id: number;\n  name: string;\n  rollNumber: string;\n}\n\n// Dummy data for testing\nconst dummyClasses: Class[] = [\n  {\n    id: 1,\n    name: '10th',\n    sections: [\n      {\n        id: 1,\n        name: 'A',\n        students: [\n          { id: 1, name: 'John Doe', rollNumber: '101' },\n          { id: 2, name: 'Jane Smith', rollNumber: '102' },\n          { id: 3, name: 'Mike Johnson', rollNumber: '103' },\n        ],\n      },\n      {\n        id: 2,\n        name: 'B',\n        students: [\n          { id: 4, name: 'Sarah Williams', rollNumber: '104' },\n          { id: 5, name: 'David Brown', rollNumber: '105' },\n          { id: 6, name: 'Emily Davis', rollNumber: '106' },\n        ],\n      },\n      {\n        id: 3,\n        name: 'C',\n        students: [\n          { id: 7, name: 'Michael Wilson', rollNumber: '107' },\n          { id: 8, name: 'Lisa Anderson', rollNumber: '108' },\n          { id: 9, name: 'James Taylor', rollNumber: '109' },\n        ],\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: '9th',\n    sections: [\n      {\n        id: 4,\n        name: 'A',\n        students: [\n          { id: 10, name: 'Robert Clark', rollNumber: '201' },\n          { id: 11, name: 'Mary Johnson', rollNumber: '202' },\n          { id: 12, name: 'William Brown', rollNumber: '203' },\n        ],\n      },\n      {\n        id: 5,\n        name: 'B',\n        students: [\n          { id: 13, name: 'Jennifer White', rollNumber: '204' },\n          { id: 14, name: 'Thomas Lee', rollNumber: '205' },\n          { id: 15, name: 'Patricia Martinez', rollNumber: '206' },\n        ],\n      },\n    ],\n  },\n];\n\nconst dummyGrades: Grade[] = [\n  {\n    id: 1,\n    studentId: 1,\n    studentName: 'John Doe',\n    subject: 'Mathematics',\n    marks: 85,\n    maxMarks: 100,\n    grade: 'A',\n    remarks: 'Excellent work',\n    date: '2024-03-25',\n  },\n  {\n    id: 2,\n    studentId: 1,\n    studentName: 'John Doe',\n    subject: 'Science',\n    marks: 92,\n    maxMarks: 100,\n    grade: 'A+',\n    remarks: 'Outstanding performance',\n    date: '2024-03-25',\n  },\n  {\n    id: 3,\n    studentId: 1,\n    studentName: 'John Doe',\n    subject: 'English',\n    marks: 78,\n    maxMarks: 100,\n    grade: 'B+',\n    remarks: 'Good effort',\n    date: '2024-03-25',\n  },\n];\n\nconst GradeViewer: React.FC = () => {\n  const [selectedClass, setSelectedClass] = useState<string>('');\n  const [selectedSection, setSelectedSection] = useState<string>('');\n  const [selectedStudent, setSelectedStudent] = useState<string>('');\n  const [showGrades, setShowGrades] = useState(false);\n  const [grades, setGrades] = useState<Grade[]>([]);\n\n  // Simulate API calls with dummy data\n  const fetchGrades = () => {\n    // In a real application, this would be an API call\n    setGrades(dummyGrades);\n  };\n\n  const handleViewGrades = () => {\n    fetchGrades();\n    setShowGrades(true);\n  };\n\n  const calculateCumulative = () => {\n    if (!grades) return { totalMarks: 0, totalMaxMarks: 0, percentage: 0, grade: '' };\n    \n    const totalMarks = grades.reduce((sum, grade) => sum + grade.marks, 0);\n    const totalMaxMarks = grades.reduce((sum, grade) => sum + grade.maxMarks, 0);\n    const percentage = (totalMarks / totalMaxMarks) * 100;\n    \n    let grade = '';\n    if (percentage >= 90) grade = 'A+';\n    else if (percentage >= 80) grade = 'A';\n    else if (percentage >= 70) grade = 'B';\n    else if (percentage >= 60) grade = 'C';\n    else if (percentage >= 50) grade = 'D';\n    else grade = 'F';\n\n    return { totalMarks, totalMaxMarks, percentage: percentage.toFixed(2), grade };\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-2xl font-bold mb-6\">Grade Viewer</h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n        {/* Class Selection */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select Class</label>\n          <select\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n            value={selectedClass}\n            onChange={(e) => {\n              setSelectedClass(e.target.value);\n              setSelectedSection('');\n              setSelectedStudent('');\n              setShowGrades(false);\n            }}\n          >\n            <option value=\"\">Select a class</option>\n            {dummyClasses.map((cls) => (\n              <option key={cls.id} value={cls.id}>\n                {cls.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Section Selection */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select Section</label>\n          <select\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n            value={selectedSection}\n            onChange={(e) => {\n              setSelectedSection(e.target.value);\n              setSelectedStudent('');\n              setShowGrades(false);\n            }}\n            disabled={!selectedClass}\n          >\n            <option value=\"\">Select a section</option>\n            {dummyClasses.find(c => c.id === Number(selectedClass))?.sections.map((section) => (\n              <option key={section.id} value={section.id}>\n                {section.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Student Selection */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select Student</label>\n          <select\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n            value={selectedStudent}\n            onChange={(e) => {\n              setSelectedStudent(e.target.value);\n              setShowGrades(false);\n            }}\n            disabled={!selectedSection}\n          >\n            <option value=\"\">Select a student</option>\n            {dummyClasses.find(c => c.id === Number(selectedClass))\n              ?.sections.find(s => s.id === Number(selectedSection))\n              ?.students.map((student) => (\n                <option key={student.id} value={student.id}>\n                  {student.name} (Roll No: {student.rollNumber})\n                </option>\n              ))}\n          </select>\n        </div>\n      </div>\n\n      {/* View Button */}\n      <div className=\"mb-6\">\n        <button\n          onClick={handleViewGrades}\n          disabled={!selectedClass || !selectedSection || !selectedStudent}\n          className={`px-4 py-2 rounded-md text-white font-medium ${\n            !selectedClass || !selectedSection || !selectedStudent\n              ? 'bg-gray-400 cursor-not-allowed'\n              : 'bg-blue-600 hover:bg-blue-700'\n          }`}\n        >\n          View Grades\n        </button>\n      </div>\n\n      {/* Grades Table */}\n      {showGrades && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n              Grades for {dummyClasses.find(c => c.id === Number(selectedClass))\n                ?.sections.find(s => s.id === Number(selectedSection))\n                ?.students.find(st => st.id === Number(selectedStudent))?.name}\n            </h3>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Subject</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Marks</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Max Marks</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Grade</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Remarks</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {grades.map((grade) => (\n                  <tr key={grade.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{grade.subject}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{grade.marks}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{grade.maxMarks}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{grade.grade}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{grade.remarks}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {/* Cumulative Summary */}\n          {grades.length > 0 && (\n            <div className=\"bg-gray-50 px-4 py-5 sm:px-6\">\n              <h4 className=\"text-md font-medium text-gray-900 mb-2\">Cumulative Summary</h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">Total Marks</p>\n                  <p className=\"text-lg font-semibold\">{calculateCumulative().totalMarks}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">Max Marks</p>\n                  <p className=\"text-lg font-semibold\">{calculateCumulative().totalMaxMarks}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">Percentage</p>\n                  <p className=\"text-lg font-semibold\">{calculateCumulative().percentage}%</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">Overall Grade</p>\n                  <p className=\"text-lg font-semibold\">{calculateCumulative().grade}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GradeViewer; "],"names":["dummyClasses","id","name","sections","students","rollNumber","dummyGrades","studentId","studentName","subject","marks","maxMarks","grade","remarks","date","GradeViewer","_dummyClasses$find","_dummyClasses$find2","_dummyClasses$find2$s","_dummyClasses$find3","_dummyClasses$find3$s","_dummyClasses$find3$s2","selectedClass","setSelectedClass","useState","selectedSection","setSelectedSection","selectedStudent","setSelectedStudent","showGrades","setShowGrades","grades","setGrades","calculateCumulative","totalMarks","totalMaxMarks","percentage","reduce","sum","toFixed","_jsxs","className","children","_jsx","value","onChange","e","target","map","cls","disabled","find","c","Number","section","s","student","onClick","handleViewGrades","st","length"],"sourceRoot":""}