{"version":3,"file":"static/js/105.c3884256.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/DocumentTextIcon.js","pages/students/Gradebook.tsx","../node_modules/@heroicons/react/24/outline/esm/AcademicCapIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction DocumentTextIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DocumentTextIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\nimport { AcademicCapIcon, ChartBarIcon, DocumentTextIcon } from '@heroicons/react/24/outline';\n\ninterface Grade {\n  subject: string;\n  marks: number;\n  maxMarks: number;\n  grade: string;\n  remarks: string;\n}\n\ninterface Student {\n  id: string;\n  name: string;\n  class: string;\n  rollNumber: string;\n  grades: Grade[];\n}\n\nconst students: Student[] = [\n  {\n    id: '1',\n    name: 'John Doe',\n    class: '10th',\n    rollNumber: '101',\n    grades: [\n      {\n        subject: 'Mathematics',\n        marks: 85,\n        maxMarks: 100,\n        grade: 'A',\n        remarks: 'Excellent work',\n      },\n      {\n        subject: 'Science',\n        marks: 92,\n        maxMarks: 100,\n        grade: 'A+',\n        remarks: 'Outstanding performance',\n      },\n      {\n        subject: 'English',\n        marks: 78,\n        maxMarks: 100,\n        grade: 'B+',\n        remarks: 'Good effort',\n      },\n    ],\n  },\n];\n\nexport default function Gradebook() {\n  const [selectedStudent, setSelectedStudent] = useState(students[0]);\n\n  const calculateAverage = () => {\n    const total = selectedStudent.grades.reduce((sum, grade) => sum + grade.marks, 0);\n    return (total / (selectedStudent.grades.length * 100)) * 100;\n  };\n\n  const generateReportCard = () => {\n    // In a real application, this would generate a PDF report card\n    console.log('Generating report card for', selectedStudent.name);\n  };\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8\">\n      <div className=\"sm:flex sm:items-center\">\n        <div className=\"sm:flex-auto\">\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Gradebook</h1>\n          <p className=\"mt-2 text-sm text-gray-700\">\n            View and manage student grades and generate report cards.\n          </p>\n        </div>\n        <div className=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\">\n          <button\n            type=\"button\"\n            onClick={generateReportCard}\n            className=\"inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\"\n          >\n            <DocumentTextIcon className=\"h-5 w-5 mr-2\" />\n            Generate Report Card\n          </button>\n        </div>\n      </div>\n\n      {/* Student Selection */}\n      <div className=\"mt-8\">\n        <label htmlFor=\"student\" className=\"block text-sm font-medium text-gray-700\">\n          Select Student\n        </label>\n        <select\n          id=\"student\"\n          name=\"student\"\n          value={selectedStudent.id}\n          onChange={(e) => {\n            const student = students.find((s) => s.id === e.target.value);\n            if (student) setSelectedStudent(student);\n          }}\n          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n        >\n          {students.map((student) => (\n            <option key={student.id} value={student.id}>\n              {student.name} - {student.class} ({student.rollNumber})\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Student Info */}\n      <div className=\"mt-8 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\n        <div className=\"overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6\">\n          <dt className=\"truncate text-sm font-medium text-gray-500\">Student Name</dt>\n          <dd className=\"mt-1 text-3xl font-semibold tracking-tight text-gray-900\">\n            {selectedStudent.name}\n          </dd>\n        </div>\n        <div className=\"overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6\">\n          <dt className=\"truncate text-sm font-medium text-gray-500\">Class</dt>\n          <dd className=\"mt-1 text-3xl font-semibold tracking-tight text-gray-900\">\n            {selectedStudent.class}\n          </dd>\n        </div>\n        <div className=\"overflow-hidden rounded-lg bg-white px-4 py-5 shadow sm:p-6\">\n          <dt className=\"truncate text-sm font-medium text-gray-500\">Average Score</dt>\n          <dd className=\"mt-1 text-3xl font-semibold tracking-tight text-gray-900\">\n            {calculateAverage().toFixed(1)}%\n          </dd>\n        </div>\n      </div>\n\n      {/* Grades Table */}\n      <div className=\"mt-8\">\n        <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg\">\n          <table className=\"min-w-full divide-y divide-gray-300\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\">\n                  Subject\n                </th>\n                <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                  Marks\n                </th>\n                <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                  Grade\n                </th>\n                <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-900\">\n                  Remarks\n                </th>\n                <th scope=\"col\" className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\">\n                  <span className=\"sr-only\">Actions</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200 bg-white\">\n              {selectedStudent.grades.map((grade) => (\n                <tr key={grade.subject}>\n                  <td className=\"whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6\">\n                    <div className=\"flex items-center\">\n                      <AcademicCapIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\n                      {grade.subject}\n                    </div>\n                  </td>\n                  <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                    <div className=\"flex items-center\">\n                      <ChartBarIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\n                      {grade.marks}/{grade.maxMarks}\n                    </div>\n                  </td>\n                  <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                    {grade.grade}\n                  </td>\n                  <td className=\"whitespace-nowrap px-3 py-4 text-sm text-gray-500\">\n                    {grade.remarks}\n                  </td>\n                  <td className=\"relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                    <button className=\"text-indigo-600 hover:text-indigo-900\">\n                      Edit\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n} ","import * as React from \"react\";\nfunction AcademicCapIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4.26 10.147a60.438 60.438 0 0 0-.491 6.347A48.62 48.62 0 0 1 12 20.904a48.62 48.62 0 0 1 8.232-4.41 60.46 60.46 0 0 0-.491-6.347m-15.482 0a50.636 50.636 0 0 0-2.658-.813A59.906 59.906 0 0 1 12 3.493a59.903 59.903 0 0 1 10.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.717 50.717 0 0 1 12 13.489a50.702 50.702 0 0 1 7.74-3.342M6.75 15a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm0 0v-3.675A55.378 55.378 0 0 1 12 8.443m-7.007 11.55A5.981 5.981 0 0 0 6.75 15.75v-1.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(AcademicCapIcon);\nexport default ForwardRef;"],"names":["DocumentTextIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","students","name","class","rollNumber","grades","subject","marks","maxMarks","grade","remarks","Gradebook","selectedStudent","setSelectedStudent","useState","_jsxs","className","children","_jsx","type","onClick","generateReportCard","console","log","htmlFor","value","onChange","e","student","find","s","target","map","reduce","sum","length","toFixed","scope","AcademicCapIcon","ChartBarIcon"],"sourceRoot":""}